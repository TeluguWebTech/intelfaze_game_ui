import { useState } from "react";
import { Link } from "react-router-dom";

const CAddClientForm = () => {
  const [formData, setFormData] = useState({
    firstName: "",
    lastName: "",
    location: "",
    address: "",
    contact: "",
    email: "",
    businessTimings: "",
    referenceName: "",
    referenceContact: "",
    depositAmount: "",
    trtMachines: "",
    commission: "",
    dateOfJoining: "",
    expectedPaymentDate: "",
    leadGeneratedBy: "",
    reportingTo: "",
    image: null,
    documents: null,
  });

  const handleChange = (e) => {
    const { name, value, type, files } = e.target;
    setFormData({
      ...formData,
      [name]: type === "file" ? files[0] : value,
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    console.log(formData);
  };

  return (
    <div className="min-h-screen flex flex-col items-center justify-center bg-gray-100 p-4">
      {/* Breadcrumbs */}
      <nav className="w-full max-w-6xl mb-4 text-sm text-gray-500">
        <ul className="flex space-x-2">
       
          <Link to="/clients">
          Clients /
          </Link>
          <li className="text-blue-600 font-medium">Add Client</li>
        </ul>
      </nav>

      <div className="w-full max-w-6xl p-6 bg-white shadow-lg rounded-lg">
        <h2 className="text-xl sm:text-2xl font-semibold mb-6 text-center text-blue-600">
          Add Client
        </h2>
        <form
          onSubmit={handleSubmit}
          className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 sm:gap-6"
        >
          {[  
            { name: "firstName", label: "First Name" },
            { name: "lastName", label: "Last Name" },
            { name: "location", label: "Location" },
            { name: "contact", label: "Contact" },
            { name: "email", label: "Email" },
            { name: "referenceName", label: "Reference Name" },
            { name: "referenceContact", label: "Reference Contact" },
            { name: "depositAmount", label: "Deposit Amount" },
            { name: "trtMachines", label: "No. of TRT Machines" },
            { name: "commission", label: "Proposed Commission %" },
            { name: "leadGeneratedBy", label: "Lead Generated By" },
            { name: "reportingTo", label: "Reporting To" },
          ].map(({ name, label }) => (
            <div key={name} className="relative w-full">
              <label className="absolute left-3 -top-3 bg-white px-1 text-xs text-blue-500">
                {label}
              </label>
              <input
                type="text"
                name={name}
                onChange={handleChange}
                required
                className="peer w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
              />
            </div>
          ))}

          <div className="relative w-full sm:col-span-2">
            <label className="absolute left-3 -top-3 bg-white px-1 text-xs text-blue-500">
              Address
            </label>
            <input
              type="text"
              name="address"
              onChange={handleChange}
              required
              className="peer w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
            />
          </div>

          <div className="relative w-full sm:col-span-2">
            <label className="absolute left-3 -top-3 bg-white px-1 text-xs text-blue-500">
              Business Timings
            </label>
            <input
              type="text"
              name="businessTimings"
              onChange={handleChange}
              required
              className="peer w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
            />
          </div>

          {[  
            { name: "dateOfJoining", label: "Date of Joining" },
            { name: "expectedPaymentDate", label: "Expected Payment Date" },
          ].map(({ name, label }) => (
            <div key={name} className="relative w-full">
              <label className="absolute left-3 -top-3 bg-white px-1 text-xs text-blue-500">
                {label}
              </label>
              <input
                type="date"
                name={name}
                onChange={handleChange}
                required
                className="peer w-full border border-gray-300 rounded-md px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500"
              />
            </div>
          ))}

          <div className="col-span-3 w-full">
            <label className="block text-gray-700 font-medium">Upload Image</label>
            <input
              type="file"
              name="image"
              onChange={handleChange}
              accept="image/*"
              className="w-full border border-gray-300 rounded-md px-3 py-2 text-sm"
            />
          </div>

          <div className="col-span-3 w-full">
            <label className="block text-gray-700 font-medium">Upload Documents</label>
            <input
              type="file"
              name="documents"
              onChange={handleChange}
              multiple
              className="w-full border border-gray-300 rounded-md px-3 py-2 text-sm"
            />
          </div>

          <button
            type="submit"
            className="col-span-3 bg-blue-500 text-white py-3 px-6 rounded-lg hover:bg-blue-600 transition duration-300 text-sm"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
  );
};

export default CAddClientForm;